#!/bin/bash
### BEGIN INIT INFO
# Provides:          gunicorn-<%= name %>
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop gunicorn-<%= name %>
### END INIT INFO

NAME=gunicorn-<%= name %>
DESC=$NAME
VENV=<%= venv %>
SRC=<%= src %>
DAEMON=$VENV/bin/gunicorn<% if django %>_django<% end %>
<% if owner == 'undef' or group == 'undef' %>
CHOWN=""
<% else %>
CHOWN="-c<%= owner %>:<%= group %>"
<% end %>
SOCKET=<%= socket %>
RUNDIR=<%= rundir %>
PIDFILE=<%= pidfile %>
LOGFILE=<%= logfile %>
WORKERS=<%= workers %>
TIMEOUT=<%= timeout_seconds %>
MODULE=<%= django ? django_settings : wsgi_module %>
export PYTHONPATH=<%- pythonpath.each do |syspath| -%>$SRC/<%= syspath %>:<%- end %>$SRC

DAEMON_OPTS="-b $SOCKET -p $PIDFILE --log-file $LOGFILE \
--workers $WORKERS -t $TIMEOUT --daemon --name $NAME $MODULE"

test -x $DAEMON || exit 0

. /etc/rc.d/init.d/functions

if [ ! -d $RUNDIR ]; then
  mkdir -p $RUNDIR
  <% if owner != 'undef' and group != 'undef' %>
  chown <%= owner %>:<%= group%> $RUNDIR
  <% end %>
fi

case "$1" in
  start)
    echo -n "Starting $DESC: "
    cd $SRC && daemon $DAEMON $DAEMON_OPTS || true
    echo "$NAME."
        ;;
  stop)
    echo -n "Stopping $DESC: "
    killproc -p $PIDFILE $DAEMON || true
    echo "$NAME."
        ;;
  restart)
    echo -n "Restarting $DESC: "
    killproc -p $PIDFILE $DAEMON || true
    sleep 1
    cd $SRC && daemon $DAEMON $DAEMON_OPTS || true
    echo "$NAME."
        ;;
  reload)
    echo -n "Reloading $DESC: "
    killproc -p $PIDFILE $DAEMON -HUP || true
    echo "$NAME."
        ;;
  status)
    status -p $PIDFILE "$DAEMON" $NAME && exit 0 || exit $?
        ;;
  *)
        echo "Usage: $NAME {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit 0
